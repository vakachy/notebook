
import json


# -------------------------------------------------------------------- #
# показать меню программы
def show_menu() -> int:
    print("\n" + "=" * 10 + " МЕНЮ " + "=" * 10)
    print("1. Создать заметку")
    print("2. Показать все заметки")
    print("3. Редактировать заметку")
    print("4. Удалить заметку")
    print("5. Закончить работу")
    print('=' * 26 + "\n" + '=' * 26)
    return int(input("Введите номер необходимого действия: "))


# -------------------------------------------------------------------- #
# ввод id заметки при удалении

def get_id_for_deletion():
    print('=' * 20)
    print("Удаление заметки по ID")
    print('=' * 20)
    note_id = input("Введите ID заметки: ")
    return int(note_id)


# -------------------------------------------------------------------- #
# показать все существующие заметки

def show_all_notes(init_file):
    print('=' * 20)
    print("Показаны все заметки: ")
    print('=' * 20)
    print('%3s %-20s %-20s %-20s' %
          ('ID', 'Название', "Дата создания", "Текст заметки"))
    print()
    with open(init_file, 'r', encoding='utf8') as file:
        data = json.load(file)
        for txt in data['notes']:
            print_note_pretty(txt)


# -------------------------------------------------------------------- #
# вывести заметку в отформатированном виде

def print_note_pretty(txt):
    print('%3d %-20s %-20s %-20s' %
          (txt['id'], txt['title'], txt['date'], txt['body']))


# -------------------------------------------------------------------- #
#  вывести заметку в отформатированном виде с заголовком

def show_note_pretty(note):
    print('%3s %-20s %-20s %-20s' %
          ('ID', 'Название', "Дата создания", "Текст заметки"))
    print()
    print_note_pretty(note)


# -------------------------------------------------------------------- #
# ввод названия/заголовка заметки и ее содержимого при добавлении заметки

def add_note():
    print('=' * 20)
    print("Добавление заметки: ")
    print('=' * 20)
    title = input("Введите НАЗВАНИЕ заметки: ")
    while title == "":
        print("Заголовок не может быть пустым!")
        title = input("Введите НАЗВАНИЕ заметки: ")
    body = input("Добавьте СОДЕРЖИМОЕ заметки: ")
    return title, body


# -------------------------------------------------------------------- #
# сообщение о завершении программы

def show_quit_message():
    print("Работа завершена")


# -------------------------------------------------------------------- #
# ввод id заметки при редактировании

def get_id_for_edition():
    print('=' * 20)
    print("Редактирование заметки: ")
    print('=' * 20)
    note_id = input("Введите ID заметки: ")
    return int(note_id)


# -------------------------------------------------------------------- #
# ввод данных (заголовка и текста) при редактировании заметки

def edit_note(index, list_of_notes):
    note = list_of_notes[index]
    note_id = note['id']
    title = note['title']
    body = note['body']
    print('=' * 20)
    print("Старая заметка: ")
    show_note_pretty(note)
    print('=' * 20)
    new_title = input("Новый заголовок для заметки: ")

    while new_title == "":
        print("Заголовок не может быть пустым!")
        new_title = input("Новый заголовок для заметки: ")

    new_body = input("Новое содержимое заметки: ")
    return note_id, title, new_title, body, new_body


# -------------------------------------------------------------------- #
# сообщение о том, что НЕ было внесено никаких изменений

def warn_of_no_change():
    print("---Изменений НЕ внесено---")
    print("----Заметки идентичны----")


# -------------------------------------------------------------------- #
# сообщение о том, что заметка не существует

def warn_of_no_note():
    print("Ошибка!\nЗаметки с таким ID нет")


# -------------------------------------------------------------------- #
# сообщение о сохранении изменений

def warn_of_change_made():
    print("!!!Изменения СОХРАНЕНЫ!!!")


# -------------------------------------------------------------------- #
# сообщение об удалении заметки

def warn_of_note_deletion():
    print("!!!Заметка была удалена!!")


# -------------------------------------------------------------------- #
# сообщение о создании заметки

def warn_of_note_creation():
    print("Заметка СОЗДАНА!")
